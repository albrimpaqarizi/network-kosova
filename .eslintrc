{
  "env": {
    "browser": true,
    "es2021": true,
    "react-native/react-native": true
  },
  "extends": [
    "eslint:recommended",
    "airbnb",
    "airbnb/hooks",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:react-native/all",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-native",
    "module-resolver",
    "simple-import-sort",
    "import"
  ],
  "settings": {
    "react-native/style-sheet-object-names": ["EStyleSheet", "OtherStyleSheet", "PStyleSheet"],
    "import/extensions": [".ts", ".tsx", ".js", ".jsx"],
    "import/resolver": {
      "typescript": {
        "project": "."
      }
    }
  },
  "rules": {
    //
    //  React Native RULES
    //
    // React Native specific linting rules for ESLint
    "react-native/no-unused-styles": 2,
    "react-native/split-platform-components": 2,
    "react-native/no-inline-styles": 2,
    "react-native/no-color-literals": 2,
    "react-native/no-raw-text": 2,
    "react-native/no-single-element-style-arrays": 2,
    "react-native/sort-styles": [
      "warn",
      "asc",
      { "ignoreClassNames": true, "ignoreStyleProperties": false }
    ],
    // Alias paths ESLint
    "module-resolver/use-alias": [
      "error",
      {
        "ignoreDepth": 2,
        "allowDepthMoreOrLessThanEquality": false,
        "extensions": [".ts", ".tsx", ".jsx"]
      }
    ],
    //
    //  ESLINT RULES
    //
    // limits objects if enabled but part of recommaded plugin
    "no-prototype-builtins": "off",
    // used still for debuging
    "no-console": "off",
    // do not allow fn params reassign
    "no-param-reassign": "error",
    // should alwys use template
    "prefer-template": "error",
    // not always needed
    "arrow-parens": "off",
    // as needed
    "arrow-body-style": ["error", "as-needed"],
    // warn if function does not have a name
    "func-names": "warn",
    // error out if condition is constant
    "no-constant-condition": "error",
    // limits objects if enabled but part of recommaded plugin
    // disables nasty underscore dangle
    "no-underscore-dangle": "error",
    // will save us debuging time
    "nonblock-statement-body-position": "error",
    // this will allow both named and arrow functions as callbacks
    "prefer-arrow-callback": ["error", { "allowNamedFunctions": true }],
    // dissabled ts will handle them
    "dot-notation": "off",
    "no-use-before-define": "off",
    "no-implied-eval": "off",
    "no-throw-literal": "off",
    "no-return-await": "off",
    "comma-dangle": "off",
    "no-unused-vars": "off",
    // consistent with prettier
    "max-len": [
      "warn",
      {
        "code": 80,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true
      }
    ],
    // forced but not everywhere
    "camelcase": [
      "error",
      {
        // react
        "allow": ["^UNSAFE_"],
        "properties": "never",
        "ignoreGlobals": true,
        "ignoreImports": true,
        // sometimes needed from api
        "ignoreDestructuring": true
      }
    ],
    //
    // Prettier rules
    //
    "prettier/prettier": ["error"],
    //
    //  IMPORT RULES
    //
    // does not play well with our style guides
    "import/prefer-default-export": "off",
    "import/no-default-export": "off",
    // bad for monorepo arch
    "import/no-extraneous-dependencies": "off",
    // makes grouping harder
    "import/newline-after-import": "warn",
    // make sure imports are resolved
    "import/no-unresolved": 2,
    // makes code cleaner this way
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never",
        "js": "never",
        "jsx": "never"
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": ["builtin", "external", "internal", "sibling", "parent", "index", "object"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "react-native",
            "patternOptions": {
              "pattern": "react"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@navigation/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@config/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@hooks/**",
            "patternOptions": {
              "pattern": "@config/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@atoms/**",
            "patternOptions": {
              "pattern": "@molecules/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@molecules/**",
            "patternOptions": {
              "pattern": "@organisms/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@organisms/**",
            "patternOptions": {
              "pattern": "@templates/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@templates/**",
            "patternOptions": {
              "pattern": "@screens/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@screens/**",
            "patternOptions": {
              "pattern": "@templates/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@stores/**",
            "patternOptions": {
              "pattern": "@utils/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@utils/**",
            "patternOptions": {
              "pattern": "@stores/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@styles/**",
            "patternOptions": {
              "pattern": "@utils/**"
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@enums/**",
            "patternOptions": {
              "pattern": ["@styles/**"]
            },
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@interfaces/**",
            "patternOptions": {
              "pattern": "@enums/**"
            },
            "group": "external",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "react",
          "react-native",
          "@navigation/**",
          "@config/**",
          "@hooks/**",
          "@atoms/**",
          "@molecules/**",
          "@organisms/**",
          "@templates/**",
          "@screens/**",
          "@stores/**",
          "@utils/**",
          "@styles/**",
          "@enums/**",
          "@interfaces/**"
        ],
        "newlines-between": "ignore",
        "alphabetize": { "order": "asc", "caseInsensitive": true },
        "warnOnUnassignedImports": false
      }
    ],
    // easy autofixable import sorting with eslint-plugin-simple-import-sort
    "simple-import-sort/imports": "off",
    "simple-import-sort/exports": "warn",
    "overrides": [
      {
        "files": "src/**.tsx",
        "rules": {
          "import/order": "off"
        }
      }
    ]
  }
}
